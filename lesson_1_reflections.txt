1) How did viewing a diff between two versions of a file help you spot the bug?
It was helpful because the Diff function easily spotted subtracted and added 
edits in the two files.

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can go back to previous versions and copy paste code from them if you want.
This saves time looking for previous saved versions of code in your directory.

3) What do you think are the pros and cons of manual choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: you can save changes specifically and show that to other cooperators in a coding group.
Cons: You might to manually forget to save, and all of it gets deleted/loss.

4) Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Saving multiple files in Git repositories where files are connected to each other make it reasonable to do so. Documents in G Docs, however, are all independent of one another, so separate commits are better in this case.

5) How can you use the commands git log and git diff to view the history of files?
Use git log to see the commit changes and messages. Use git diff to specifically compare two commits.

6) How might using version control make you more confident to make changes that could break something?
You can always restore and run/debug previous commits.

7) ...what do you want to try using Git for?
I want to use git in a real project while working with others stressully.

